{"version":3,"sources":["History.js","views/ListView/components/RecipeCard.jsx","views/ListView/index.jsx","views/RecipeView/components/Ingredient.jsx","views/RecipeView/index.jsx","views/Utils/Form/TextInput.js","views/Utils/Form/TextArea.js","views/Utils/Form/Toggle.jsx","views/RecipeForm/components/Ingredients.jsx","views/RecipeForm/components/Directions.jsx","views/RecipeForm/index.jsx","Routes.js","index.js"],"names":["createBrowserHistory","RecipeCard","_ref","recipe","deleteCallback","react_default","a","createElement","className","src","images","small","style","width","height","title","prepTime","cookTime","servings","onClick","e","preventDefault","stopPropagation","window","confirm","axios","delete","concat","uuid","then","res","alert","react_router_dom","to","ListView","_useState","useState","_useState2","Object","slicedToArray","recipes","setRecipes","getList","get","data","useEffect","map","key","RecipeCard_RecipeCard","Ingredient","ingredient","ingSpecial","specials","find","special","ingredientId","name","amount","measurement","type","text","setRecipe","_useState3","_useState4","setSpecials","params","useParams","backgroundImage","full","backgroundSize","backggroundAttachment","moment","postDate","format","description","ingredients","ing","Ingredient_Ingredient","directions","dir","index","option","instructions","TextInput","_ref$formGroupClassNa","formGroupClassName","_ref$containerClassNa","containerClassName","_ref$label","label","_ref$error","error","undefined","_ref$onKeyEnter","onKeyEnter","containerStyles","onChange","rightIcon","leftIcon","customButtons","_ref$hideClearBtn","hideClearBtn","pattern","props","objectWithoutProperties","validation","inputRef","useRef","isPassword","showPass","setShowPass","select","value","invalid","valid","numeric","parseToMoney","objectSpread","parseToNumber","onBlur","min","onTextChange","max","target","current","disabled","Label","FormGroup","tabIndex","id","Input","assign","innerRef","onKeyDown","Fragment","newValue","options","length","hideDropDownIcon","originalValue","callback","isNaN","indexOf","parseInt","toString","parseFloat","action","arguments","toFixed","replace","TextArea","minHeight","Toggle","_ref$interpolate","interpolate","active","setActive","Array","isArray","Ingredients","onSubmit","handleInputChange","newData","toConsumableArray","borderTop","push","unix","TextInput_TextInput","placeholder","splice","handleRemove","Directions","direction","Toggle_Toggle","optional","RecipeForm","newRecipe","console","log","handleSubmit","put","handleSuccess","post","message","history","TextArea_TextArea","Ingredients_Ingredients","Directions_Directions","withRouter","react_router","exact","path","views_ListView","RecipeView","views_RecipeForm","render","src_Routes","document","getElementById"],"mappings":"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","file":"static/js/main.eb4026cf.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();","import React from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst RecipeCard = ({ recipe, deleteCallback }) => {\r\n    const handleDelete = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        if (window.confirm(\"Are you sure you want to delete this?\")) {\r\n            axios\r\n                .delete(`http://localhost:3001/recipes/${ recipe.uuid }`)\r\n                .then(res => {\r\n                    alert(\"Delete successfull!\");\r\n                    deleteCallback();\r\n                })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div  className=\"card clickable\">\r\n            <div>\r\n                <img\r\n                    className=\"img img-cover\"\r\n                    src={ recipe.images ? recipe.images.small : 'https://picsum.photos/200/300'}\r\n                    style={{\r\n                        width: \"100%\",\r\n                        height: 200\r\n                    }}\r\n                />\r\n            </div>\r\n            <div className=\"pad-20\">\r\n                <div className=\"txt-bold txt-medium-large\">\r\n                    { recipe.title }\r\n                </div>\r\n                <div className=\"margin-top-20\">\r\n                    Preparation: { recipe.prepTime }mins\r\n                </div>\r\n                <div>\r\n                    Cook Time: { recipe.cookTime }mins\r\n                </div>\r\n                <div>\r\n                    Servings: { recipe.servings } pax\r\n                </div>\r\n            </div>\r\n            <div className=\"margin-top-20 flex flex-end pad-20\">\r\n                <button\r\n                    onClick={ handleDelete }\r\n                    className=\"btn btn-clear-bordered-red btn-width-auto txt-small\"\r\n                >\r\n                    Delete\r\n                </button>\r\n                <Link\r\n                    to={`/recipe/edit/${ recipe.uuid }`}\r\n                    className=\"btn btn-clear-bordered-green btn-width-auto txt-small margin-left-20\"\r\n                >\r\n                    Edit\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport { RecipeCard };","import React, {useState, useEffect} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nimport { RecipeCard } from './components';\r\n\r\nconst ListView = () => {\r\n    const [recipes, setRecipes] = useState([]);\r\n    const getList = () => {\r\n        axios\r\n            .get('http://localhost:3001/recipes')\r\n            .then(res => res.data ? setRecipes(res.data) : {})\r\n    };\r\n\r\n    useEffect(() => {\r\n        getList();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container-1200 margin-auto-h pad-top-50 pad-bottom-50\">\r\n                <div className=\"flex space-between align-center\">\r\n                    <div className=\"txt-header-2 txt-bold\">\r\n                        Recipes\r\n                    </div>\r\n                    <div>\r\n                        <Link\r\n                            to=\"/recipe/create\"\r\n                            className=\"btn btn-pad-large btn-success txt-center\"\r\n                        >\r\n                            Create\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n                <div className=\"margin-top-20 grid grid-3 grid-gap-20\">\r\n                    {\r\n                        recipes.map(recipe => (\r\n                            <div key={ recipe.uuid } >\r\n                                <Link to={`/recipe/view/${ recipe.uuid }`}>\r\n                                    <RecipeCard\r\n                                        recipe={ recipe }\r\n                                        deleteCallback={getList}\r\n                                    />\r\n                                </Link>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListView;","import React from 'react';\r\n\r\nconst Ingredient = ({ ingredient, specials }) => {\r\n    const ingSpecial = specials.find(special => special.ingredientId === ingredient.uuid);\r\n\r\n    return (\r\n        <div className=\"pad-10\">\r\n            <div>\r\n                <span className=\"txt-bold\">{ ingredient.name }</span> x { ingredient.amount } { ingredient.measurement }\r\n            </div>\r\n            {\r\n                ingSpecial ? (\r\n                    <div className=\"card pad-10 margin-top\">\r\n                        <div className=\"txt-uppercase txt-small txt-bold txt-primary\">\r\n                            { ingSpecial.type }\r\n                        </div>\r\n                        <div className=\"txt-medium-large txt-bold margin-top-10\">\r\n                            { ingSpecial.title }\r\n                        </div>\r\n                        <div className=\"margin-top\">\r\n                            { ingSpecial.text }\r\n                        </div>\r\n                    </div>\r\n                ) : null\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport { Ingredient };","import React, {useState, useEffect} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport { useParams } from 'react-router';\r\nimport axios from 'axios';\r\n\r\nimport { Ingredient } from './components';\r\n\r\nconst ListView = () => {\r\n    const [recipe, setRecipe] = useState(null);\r\n    const [specials, setSpecials] = useState([]);\r\n    const params = useParams();\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get(`http://localhost:3001/recipes/${params.uuid}`)\r\n                .then(res => res.data ? setRecipe(res.data) : {});\r\n\r\n        axios\r\n            .get(`http://localhost:3001/specials`)\r\n                .then(res => res.data ? setSpecials(res.data) : {});\r\n    }, []);\r\n    \r\n    return recipe ? (\r\n        <div>\r\n            <div className=\"container-1200 margin-auto-h pad-top-50 pad-bottom-50\">\r\n                <div className=\"margin-bottom-10\">\r\n                    <Link to=\"/\" className=\"btn btn-clear-bordered-black txt-center\">\r\n                        Go Back\r\n                    </Link>\r\n                </div>\r\n                <div style={{\r\n                    backgroundImage: `url(${ recipe.images ? recipe.images.full : \"https://picsum.photos/300/800\" })`,\r\n                    backgroundSize: \"cover\",\r\n                    backggroundAttachment: \"fixed\",\r\n                    height: 300\r\n                }} />\r\n                <div className=\"txt-header-2 txt-bold margin-top-30\">\r\n                    { recipe.title }\r\n                </div>\r\n                <div className=\"marign-top\">\r\n                    Posted on { moment(recipe.postDate, \"MM/DD/YYYY hh:mm:ss A\").format(\"MMM DD, YYYY hh:mm A\") }\r\n                </div>\r\n                <div className=\"margin-top-50\">\r\n                    <div className=\"txt-bold txt-xlarge\">\r\n                        Description\r\n                    </div>\r\n                    <div className=\"txt-large margin-top-10\">\r\n                        { recipe.description }\r\n                    </div>\r\n                </div>\r\n                <div className=\"txt-large\">\r\n                    <div className=\"margin-top-50\">\r\n                        <span className=\"txt-bold\">Preparation:</span> { recipe.prepTime }mins\r\n                    </div>\r\n                    <div className=\"margin-top\">\r\n                        <span className=\"txt-bold\">Cook Time:</span> { recipe.cookTime }mins\r\n                    </div>\r\n                    <div className=\"margin-top\">\r\n                        <span className=\"txt-bold\">Servings:</span> { recipe.servings } pax\r\n                    </div>\r\n                </div>\r\n                {\r\n                    recipe.ingredients ? (\r\n                        <div className=\"margin-top-50\">\r\n                            <div className=\"txt-bold txt-xlarge\">\r\n                                Ingredients\r\n                            </div>\r\n                            <div className=\"txt-large margin-top-10\">\r\n                                <ul>\r\n                                    {\r\n                                        recipe.ingredients.map(ing => (\r\n                                            <li\r\n                                                key={ing.uuid}\r\n                                                className=\"margin-top\"\r\n                                            >\r\n                                                <Ingredient\r\n                                                    ingredient={ ing }\r\n                                                    specials={ specials }\r\n                                                />\r\n                                            </li>\r\n                                        ))\r\n                                    }\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    ) : null\r\n                }\r\n                {\r\n                    recipe.directions ? (\r\n                        <div className=\"margin-top-50\">\r\n                            <div className=\"txt-bold txt-xlarge\">\r\n                                Directions\r\n                            </div>\r\n                            <div className=\"txt-large margin-top-10\">\r\n                                <div>\r\n                                    {\r\n                                        recipe.directions.map((dir, index) => (\r\n                                            <div\r\n                                                key={`step${index + 1}`}\r\n                                                className=\"margin-bottom-20\"\r\n                                            >\r\n                                                <div className=\"txt-bold\">\r\n                                                    Step { index + 1 }: { dir.option ? \"(optional)\" : ''}\r\n                                                </div>\r\n                                                <div className=\"margin-top\" >\r\n                                                    { dir.instructions }\r\n                                                </div>\r\n                                            </div>\r\n                                        ))\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ) : null\r\n                }\r\n            </div>\r\n        </div>\r\n    ) : null\r\n}\r\n\r\nexport default ListView;","import React, {useState, useEffect, useRef} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { FormGroup, Label, Input } from 'reactstrap';\r\n\r\nconst TextInput = ({\r\n    formGroupClassName = \"\",\r\n    containerClassName = \"\",\r\n    label = \"\",\r\n    error = undefined,\r\n    onKeyEnter = false,\r\n    containerStyles,\r\n    onChange,\r\n    rightIcon,\r\n    leftIcon,\r\n    customButtons,\r\n    hideClearBtn = false,\r\n    pattern,\r\n    ...props\r\n}) => {\r\n    const validation = {},\r\n        inputRef = useRef(null),\r\n        isPassword = props.type === \"password\",\r\n        [showPass, setShowPass] = useState(false);\r\n\r\n    let select = false;\r\n\r\n    if (props.value === undefined) {\r\n        props.value = \"\";\r\n    }\r\n\r\n    if (error) {\r\n        validation.invalid = true;\r\n    } else if (error !== undefined) {\r\n        validation.valid = true;\r\n    }\r\n\r\n    if (props.type === \"password\") {\r\n        props.type = showPass ? \"text\" : \"password\";\r\n    }\r\n\r\n    if (props.type === \"select\") {\r\n        props.type = \"text\"\r\n        select = true;\r\n    }\r\n\r\n    if (props.numeric) {\r\n        if (props.numeric === \"money\") {\r\n            props.onChange = e => parseToMoney(e, props.value ? props.value : '', {...props}, onChange);\r\n        } else {\r\n            props.onChange = e => parseToNumber(e, props.value ? props.value : '', props.numeric, {...props}, onChange);\r\n        }\r\n\r\n        props.onBlur = (e) => {\r\n            if (props.numeric === \"money\") {\r\n                parseToMoney(e, props.value ? props.value : (props.min ? props.min : 0), {...props}, onChange, \"blur\");\r\n            } else {\r\n                parseToNumber(e, props.value ? props.value : (props.min ? props.min : 0), props.numeric, {...props}, onChange);\r\n            }\r\n        }\r\n    } else {\r\n        props.onChange = e => onTextChange(e, {...props}, pattern, onChange);\r\n    }\r\n\r\n    //** used for money auto parsing */\r\n    // useEffect(() => {\r\n    //     if(inputRef.current === document.activeElement && (props.numeric === \"money\")) {\r\n    //         if(props.value.toString().substr(-3) === \".00\") {\r\n    //             const pos = props.value.toString().indexOf('.');\r\n    //             inputRef.current.focus();\r\n    //             inputRef.current.setSelectionRange(pos, pos);\r\n    //         }\r\n    //     }\r\n    // }, [props.value]);\r\n\r\n    useEffect(() => {\r\n        if (props.numeric && props.max) {\r\n            if (props.numeric === \"money\") {\r\n                parseToMoney({target: {name: props.name, value: props.value}}, props.value, {...props}, onChange);\r\n            } else {\r\n                parseToNumber({target: {name: props.name, value: props.value}}, props.value ? props.value : '', props.numeric, {...props}, onChange);\r\n            }\r\n        }\r\n    }, [props.max]);\r\n\r\n    useEffect(() => {\r\n\r\n        return () => {\r\n            inputRef.current = null;\r\n        }\r\n    }, []);\r\n\r\n    return ( \r\n        <div\r\n            className={`form-group-container relative-container ${containerClassName} ${props.disabled ? 'disabled' : ''}`}\r\n            style={containerStyles}\r\n        >\r\n            {\r\n                label ? (\r\n                    <div className=\"margin-bottom flex align-center\">\r\n                        {\r\n                            label ? (\r\n                                <Label\r\n                                    className=\"txt-medium txt-regular\"\r\n                                >\r\n                                    {label}\r\n                                </Label>\r\n                            ) : null\r\n                        }\r\n                    </div>\r\n                ) : null\r\n            }\r\n            <div className={`relative-container ${props.disabled ? 'no-pointer' : ''}`}>\r\n                <FormGroup\r\n                    className={formGroupClassName + \" relative-container\"}\r\n                >\r\n                    <div className=\"relative-container flex align-center\">\r\n                        {\r\n                            leftIcon ? (\r\n                                <div\r\n                                    className={`txt-medium pad-left-10 no-pointer`}\r\n                                    tabIndex=\"-1\"\r\n                                >\r\n                                    {leftIcon}\r\n                                </div>\r\n                            ) : null\r\n                        }\r\n                        <div\r\n                            id={props.name}\r\n                            className={`flex-1 ${select ? 'clickable' : ''}`}\r\n                        >\r\n                            <div className={`${select ? 'no-pointer' : ''} flex`}>\r\n                                <Input \r\n                                    innerRef={inputRef}\r\n                                    onKeyDown={(e) => {\r\n                                        if (e.key === \"Enter\") {\r\n                                            onKeyEnter && onKeyEnter(e);\r\n                                        }\r\n                                    }}\r\n                                    {...validation}\r\n                                    {...props}\r\n                                    className={\"form-control txt-medium-large\"}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        {\r\n                            !select && !props.disabled && (\r\n                                <>\r\n                                    {\r\n                                        customButtons ? customButtons : null\r\n                                    }\r\n                                    {\r\n                                        !hideClearBtn ? (\r\n                                            <button\r\n                                                className={`control clear-form transitioned-fast ${isPassword ? \"\" : \"pad-right-10\"}`}\r\n                                                onClick={() => {\r\n                                                    let newValue = \"\";\r\n\r\n                                                    if (props.numeric && props.min) {\r\n                                                        newValue = props.min;\r\n                                                    }\r\n\r\n                                                    props.onChange({target: {name: props.name, value: newValue}});\r\n                                                }}\r\n                                                tabIndex=\"-1\"\r\n                                            >\r\n                                                <i className=\"fas fa-times-circle\" />\r\n                                            </button>\r\n                                        ) : null\r\n                                    }\r\n                                    {\r\n                                        isPassword && !props.disabled && (\r\n                                            <button\r\n                                                className={`control clear-form transitioned-fast pad-right-10`}\r\n                                                onClick={() => setShowPass(!showPass)}\r\n                                                tabIndex=\"-1\"\r\n                                            >\r\n                                                <i className={`far fa-eye${showPass ? '-slash' : ''}`} />\r\n                                            </button>\r\n                                        )\r\n                                    }\r\n                                    {\r\n                                        rightIcon ? (\r\n                                            <div\r\n                                                className={`txt-medium pad-right-10 no-pointer`}\r\n                                                tabIndex=\"-1\"\r\n                                            >\r\n                                                {rightIcon}\r\n                                            </div>\r\n                                        ) : null\r\n                                    }\r\n                                </>\r\n                            )\r\n                        }\r\n                        {\r\n                        (select || (props.options && props.options.length > 0)) && !props.hideDropDownIcon && (\r\n                                <button\r\n                                    className={`control clear-form select-down no-pointer no-transition pad-left-10`}\r\n                                    tabIndex=\"-1\"\r\n                                >\r\n                                    <i className=\"fas fa-caret-down txt-large\" />\r\n                                </button>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </FormGroup>\r\n                {\r\n                    select && props.options && props.options.length > 0 ? (\r\n                        <div className=\"select-options txt-dark\">\r\n                            <div>\r\n                                {\r\n                                    props.options.map(option => {\r\n                                        return (\r\n                                            <div className=\"option\">\r\n                                                {option.label}\r\n                                            </div>\r\n                                        );\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    ) : null\r\n                }\r\n            </div>\r\n            {error && validation.invalid &&\r\n                <div className=\"flex flex-end margin-top form-control-error\">\r\n                    <div className=\"badge badge-error text-right txt-light txt-small\">\r\n                        <div className=\"flex\">\r\n                            <i className=\"fas fa-exclamation-circle margin-right pulse\"/>\r\n                            <div>\r\n                                {error}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nconst parseToNumber = (e, originalValue, type, props, callback) => {\r\n    if (!isNaN(e.target.value) && e.target.value.indexOf('.') === -1) {\r\n        let newValue = e.target.value;\r\n        if (newValue !== '') {\r\n            if (type === \"int\") {\r\n                newValue = parseInt(newValue);\r\n                if (props.max && (newValue > parseInt(props.max))) {\r\n                    newValue = parseInt(props.max).toString();\r\n                }\r\n\r\n                if (props.min && (parseFloat(newValue) < parseFloat(props.min))) {\r\n                    newValue = parseFloat(props.min).toString();\r\n                }\r\n            }\r\n            \r\n            newValue = newValue.toString();\r\n        } else {\r\n            if (props.min) {\r\n                newValue = props.min.toString();\r\n            }\r\n        }\r\n\r\n        callback({target: {value: newValue, name: e.target.name}});\r\n    } else {\r\n        callback({target: {value: originalValue, name: e.target.name}});\r\n    }\r\n}\r\n\r\nconst parseToMoney = (e, originalValue, props, callback, action = \"onChange\") => {\r\n    if (!isNaN(e.target.value)) {\r\n        let newValue = e.target.value;\r\n        if (newValue !== '' && newValue !== undefined && newValue !== null) {\r\n            \r\n            if (!isNaN(props.max) && (parseFloat(newValue) > parseFloat(props.max))) {\r\n                newValue = parseFloat(props.max);\r\n            }\r\n\r\n            if (props.min && (parseFloat(newValue) < parseFloat(props.min))) {\r\n                newValue = parseFloat(props.min);\r\n            }\r\n            // if (!newValue.toString().includes('.')) {\r\n            //     newValue = parseFloat(newValue).toFixed(2).toString();\r\n            // }\r\n            \r\n            newValue = newValue.toString();\r\n        }\r\n\r\n        if (action === \"blur\") {\r\n\r\n            if (!newValue) {\r\n                newValue = props.min ? props.min : '';\r\n            } else {\r\n                newValue = parseFloat(newValue).toFixed(2);\r\n            }\r\n\r\n            newValue = newValue.toString();\r\n        }\r\n\r\n        callback({target: {value: newValue, name: e.target.name}});\r\n    } else {\r\n        callback({target: {value: originalValue, name: e.target.name}});\r\n    }\r\n}\r\n\r\nconst onTextChange = (e, props, pattern, callback) => {\r\n    if (props.max && parseInt(props.max) < e.target.value.length) {\r\n        e.target.value = props.value;\r\n    }\r\n\r\n    if (pattern) {\r\n        e.target.value = e.target.value.replace(pattern,'');\r\n    }\r\n\r\n    callback(e);\r\n}\r\n\r\nexport {TextInput};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Label } from 'reactstrap';\r\n\r\nconst TextArea = ({ className = '', style = {}, ...props }) => {\r\n    return (\r\n        <div>\r\n            {\r\n                props.label ? (\r\n                    <div className=\"margin-bottom\">\r\n                        <Label className=\"txt-medium txt-regular\">\r\n                            {props.label}\r\n                        </Label>\r\n                    </div>\r\n                ) : null\r\n            }\r\n            <textarea\r\n                className={`form-control`}\r\n                style={{\r\n                    minHeight: \"150px\"\r\n                }}\r\n                {...props}\r\n            />\r\n            {props.error &&\r\n                <div className=\"flex flex-end margin-top form-control-error\">\r\n                    <div className=\"badge badge-error text-right txt-light txt-small float-in-up-down\">\r\n                        <i className=\"fas fa-exclamation-circle margin-right\"/>\r\n                        {props.error}\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nTextArea.propTypes = {\r\n    className: PropTypes.string\r\n};\r\n\r\nexport {TextArea};","import React, {useState, useEffect} from 'react';\r\n\r\nconst Toggle = ({\r\n    interpolate = [],\r\n    onChange,\r\n    value\r\n}) => {\r\n    const [active, setActive] = useState(value !== undefined ? (value === true ? true : (interpolate.indexOf(value) > 0 ? true : false)) : false);\r\n    \r\n    useEffect(() => {\r\n        setActive(value !== undefined ? (value === true ? true : (interpolate.indexOf(value) > 0 ? true : false)) : false);\r\n    }, [value]);\r\n\r\n    return (\r\n        <div\r\n            className={`${active ? 'active' : ''} custom-toggle clickable`}\r\n            onClick={() => {\r\n                let value = !active;\r\n                if (interpolate && Array.isArray(interpolate) && interpolate.length >= 2) {\r\n                    value = active ? interpolate[0] : interpolate[1];\r\n                }\r\n\r\n                onChange(value);\r\n                setActive(value);\r\n            }}\r\n        >\r\n            <div />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport {Toggle};","import React from 'react';\r\nimport moment from 'moment';\r\nimport { TextInput } from '../../Utils/Form';\r\n\r\nconst Ingredients = ({\r\n    data,\r\n    onChange,\r\n    onSubmit\r\n}) => {\r\n    const handleAddIngredient = () => {\r\n        let newData = data ? [...data] : [];\r\n\r\n        newData.push({uuid: moment().unix()});\r\n        onChange(newData);\r\n    }\r\n    const handleInputChange = (e, index) => {\r\n        let newData = data ? [...data] : [];\r\n\r\n        newData[index][e.target.name] = e.target.value;\r\n        onChange(newData);\r\n    }\r\n    const handleRemove = (index) => {\r\n        let newData = data ? [...data] : [];\r\n\r\n        newData.splice(index, 1);\r\n        onChange(newData);\r\n    }\r\n    \r\n    return (\r\n        <div\r\n            className=\"margin-top-30 pad-top-30\"\r\n            style={{ borderTop: \"2px solid #ccc\" }}\r\n        >\r\n            <div className=\"flex align-center space-between\">\r\n                <div className=\"txt-large txt-bold\">\r\n                    Ingredients\r\n                </div>\r\n                <div>\r\n                    <button\r\n                        className=\"btn btn-success txt-center\"\r\n                        onClick={handleAddIngredient}\r\n                    >\r\n                        Add\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                {\r\n                    data && data.length ? (\r\n                        data.map((ingredient, index) => (\r\n                            <div\r\n                                key={`ingredient${index}`}\r\n                                className=\"margin-top-20 card pad-10\"\r\n                            >\r\n                                <div className=\"grid grid-3 grid-gap-20\" >\r\n                                    <TextInput\r\n                                        label=\"Name\"\r\n                                        name=\"name\"\r\n                                        placeholder=\"name\"\r\n                                        value={ ingredient.name }\r\n                                        onChange={ e => handleInputChange(e, index) }\r\n                                        onKeyEnter={ onSubmit }\r\n                                    />\r\n                                    <TextInput\r\n                                        label=\"Measurement\"\r\n                                        name=\"measurement\"\r\n                                        placeholder=\"measurement\"\r\n                                        value={ ingredient.measurement }\r\n                                        onChange={ e => handleInputChange(e, index) }\r\n                                        onKeyEnter={ onSubmit }\r\n                                    />\r\n                                    <TextInput\r\n                                        label=\"Amount\"\r\n                                        name=\"amount\"\r\n                                        placeholder=\"amount\"\r\n                                        value={ ingredient.amount }\r\n                                        onChange={ e => handleInputChange(e, index) }\r\n                                        onKeyEnter={ onSubmit }\r\n                                    />\r\n                                </div>\r\n                                <div className=\"flex flex-end margin-top-10\">\r\n                                    <button\r\n                                        onClick={() => handleRemove(index)}\r\n                                        className=\"btn btn-clear txt-error\"\r\n                                    >\r\n                                        Remove\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        ))\r\n                    ) : (\r\n                        <div className=\"txt-center pad-50\">Ingredients is Empty</div>\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport { Ingredients };","import React from 'react';\r\nimport moment from 'moment';\r\nimport {\r\n    TextInput,\r\n    Toggle\r\n} from '../../Utils/Form';\r\n\r\nconst Directions = ({\r\n    data,\r\n    onChange,\r\n    onSubmit\r\n}) => {\r\n    const handleAddDirection = () => {\r\n        let newData = data ? [...data] : [];\r\n\r\n        newData.push({uuid: moment().unix()});\r\n        onChange(newData);\r\n    }\r\n    const handleInputChange = (e, index) => {\r\n        let newData = data ? [...data] : [];\r\n\r\n        newData[index][e.target.name] = e.target.value;\r\n        onChange(newData);\r\n    }\r\n    const handleRemove = (index) => {\r\n        let newData = data ? [...data] : [];\r\n\r\n        newData.splice(index, 1);\r\n        onChange(newData);\r\n    }\r\n    \r\n    return (\r\n        <div\r\n            className=\"margin-top-30 pad-top-30\"\r\n            style={{ borderTop: \"2px solid #ccc\" }}\r\n        >\r\n            <div className=\"flex align-center space-between\">\r\n                <div className=\"txt-large txt-bold\">\r\n                    Directions\r\n                </div>\r\n                <div>\r\n                    <button\r\n                        className=\"btn btn-success txt-center\"\r\n                        onClick={handleAddDirection}\r\n                    >\r\n                        Add\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                {\r\n                    data && data.length ? (\r\n                        data.map((direction, index) => (\r\n                            <div\r\n                                key={`direction${index}`}\r\n                                className=\"margin-top-20 card pad-10\"\r\n                            >\r\n                                <div className=\"flex align-center\" >\r\n                                    <div className=\"flex-1\">\r\n                                        <TextInput\r\n                                            label=\"Instructions\"\r\n                                            name=\"instructions\"\r\n                                            placeholder=\"instructions\"\r\n                                            value={ direction.instructions }\r\n                                            onChange={ e => handleInputChange(e, index) }\r\n                                            onKeyEnter={ onSubmit }\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"margin-left-40\">\r\n                                        <div className=\"margin-bottom-10\">\r\n                                            Optional\r\n                                        </div>\r\n                                        <Toggle\r\n                                            value={ direction.optional }\r\n                                            onChange={ value => handleInputChange({target: {name: \"optional\", value}}, index) }\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"flex flex-end margin-top-10\">\r\n                                    <button\r\n                                        onClick={() => handleRemove(index)}\r\n                                        className=\"btn btn-clear txt-error\"\r\n                                    >\r\n                                        Remove\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        ))\r\n                    ) : (\r\n                        <div className=\"txt-center pad-50\">Directions is Empty</div>\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport { Directions };","import React, {useState, useEffect} from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nimport {\r\n    TextInput,\r\n    TextArea\r\n} from '../Utils/Form';\r\n\r\nimport {\r\n    Ingredients,\r\n    Directions\r\n} from './components';\r\n\r\nimport history from '../../History';\r\n\r\nconst RecipeForm = () => {\r\n    const params = useParams();\r\n    const [recipe, setRecipe] = useState({});\r\n    const handleInputChange = (e) => {\r\n        const newRecipe = {...recipe};\r\n        console.log(e)\r\n        newRecipe[e.target.name] = e.target.value;\r\n        setRecipe(newRecipe);\r\n    }\r\n    const handleCreate = () => {\r\n        axios\r\n            .post(`http://localhost:3001/recipes`, recipe)\r\n            .then(res => handleSuccess(\"Successfully Created!\"));\r\n    }\r\n    const handleUpdate = () => {\r\n        axios\r\n            .put(`http://localhost:3001/recipes/${params.uuid}`, recipe)\r\n            .then(res => handleSuccess(\"Successfully Updated!\"));\r\n    }\r\n    const handleSubmit = () => {\r\n        if (recipe.uuid) handleUpdate();\r\n        else handleCreate();\r\n    }\r\n    const handleSuccess = (message) => {\r\n        alert(message);\r\n        history.push('/');\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (params.uuid) {\r\n            axios\r\n                .get(`http://localhost:3001/recipes/${params.uuid}`)\r\n                .then(res => res.data ? setRecipe(res.data) : {});\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container-1200 margin-auto-h pad-top-50 pad-bottom-50\">\r\n                <div className=\"txt-xlarge txt-bold txt-capitalize\">\r\n                    {params.action} Recipe\r\n                </div>\r\n                <div className=\"margin-top-20\">\r\n                    <TextInput\r\n                        label=\"Title\"\r\n                        name=\"title\"\r\n                        value={ recipe.title }\r\n                        onChange={handleInputChange}\r\n                        onKeyEnter={handleSubmit}\r\n                    />\r\n                </div>\r\n                <div className=\"margin-top-20\">\r\n                    <TextArea\r\n                        label=\"Description\"\r\n                        name=\"description\"\r\n                        value={ recipe.description }\r\n                        onChange={handleInputChange}\r\n                    />\r\n                </div>\r\n                <div className=\"margin-top-20 grid grid-3 grid-gap-20\">\r\n                    <TextInput\r\n                        label=\"Preparation Time\"\r\n                        name=\"prepTime\"\r\n                        numeric=\"decimal\"\r\n                        value={ recipe.prepTime }\r\n                        onChange={handleInputChange}\r\n                        onKeyEnter={handleSubmit}\r\n                    />\r\n                    <TextInput\r\n                        label=\"Cooking Time\"\r\n                        name=\"cookTime\"\r\n                        value={ recipe.cookTime }\r\n                        onChange={handleInputChange}\r\n                        onKeyEnter={handleSubmit}\r\n                    />\r\n                    <TextInput\r\n                        label=\"Servings\"\r\n                        name=\"servings\"\r\n                        numeric\r\n                        value={ recipe.servings }\r\n                        onChange={handleInputChange}\r\n                        onKeyEnter={handleSubmit}\r\n                    />\r\n                </div>\r\n                <Ingredients\r\n                    data={ recipe.ingredients }\r\n                    onChange={ value => handleInputChange({target: {name: \"ingredients\", value}}) }\r\n                    onSubmit={ handleSubmit }\r\n                />\r\n                <Directions\r\n                    data={ recipe.directions }\r\n                    onChange={ value => handleInputChange({target: {name: \"directions\", value}}) }\r\n                    onSubmit={ handleSubmit }\r\n                />\r\n                <div className=\"margin-top-50 flex space-between\">\r\n                    <Link\r\n                        to=\"/\"\r\n                        className=\"btn btn-clear btn-pad-large txt-center txt-dark\"\r\n                    >\r\n                        Cancel\r\n                    </Link>\r\n                    <button\r\n                        className=\"btn btn-success btn-pad-large\"\r\n                        onClick={handleSubmit}\r\n                    >\r\n                        Submit\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RecipeForm;","import React from 'react';\r\nimport { withRouter, Router, Route, Switch } from 'react-router-dom';\r\nimport history from './History';\r\n\r\nimport ListView from './views/ListView/';\r\nimport RecipeView from './views/RecipeView/';\r\nimport RecipeForm from './views/RecipeForm';\r\n\r\nconst Routes = () => (\r\n    <Router history={history}>\r\n        <Switch>\r\n            <Route \r\n                exact\r\n                path=\"/\"\r\n            >\r\n                <ListView />\r\n            </Route>\r\n            <Route  path=\"/recipe/view/:uuid\" >\r\n                <RecipeView />\r\n            </Route>\r\n            <Route  path=\"/recipe/:action/:uuid?\" >\r\n                <RecipeForm />\r\n            </Route>\r\n        </Switch>\r\n    </Router>\r\n);\r\n\r\nexport default withRouter(Routes);\r\n\r\n","/*eslint-disable import/default*/\r\n\r\nimport React from 'react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { render } from 'react-dom';\r\nimport Routes from './Routes';\r\n\r\nimport './assets/scss/all.scss';\r\n\r\nrender(\r\n\t<BrowserRouter>\r\n        <Routes />\r\n    </BrowserRouter>,\r\n\tdocument.getElementById('root') \r\n);\r\n"],"sourceRoot":""}